"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8962],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||r;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3388:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=n(7462),o=(n(7294),n(3905));const r={},i="load configuration",l={unversionedId:"manual/loadconfigatruntime",id:"manual/loadconfigatruntime",title:"load configuration",description:"Loading data relies on some Luban Runtime code. For Unity+C#, the com.code-philosophy.luban package has been provided. Install the com.code-philosophy.luban package in Package Manager at the address https//github.com/focus-creative-games/lubanunitydownload). For other languages, please find the project that matches your project type in Example Projects.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/manual/loadconfigatruntime.md",sourceDirName:"manual",slug:"/manual/loadconfigatruntime",permalink:"/en/docs/manual/loadconfigatruntime",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Code Style",permalink:"/en/docs/manual/codestyle"},next:{title:"data validator",permalink:"/en/docs/manual/validator"}},s={},c=[{value:"Use c# code in unity project and automatically judge to load bin or json configuration",id:"use-c-code-in-unity-project-and-automatically-judge-to-load-bin-or-json-configuration",level:2},{value:"Other item types",id:"other-item-types",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"load-configuration"},"load configuration"),(0,o.kt)("p",null,"Loading data relies on some Luban Runtime code. For Unity+C#, the ",(0,o.kt)("inlineCode",{parentName:"p"},"com.code-philosophy.luban")," package has been provided. Install the com.code-philosophy.luban package in Package Manager at the address ",(0,o.kt)("inlineCode",{parentName:"p"},"https://github.com/focus-creative-games/luban_unity.git")," (or from ",(0,o.kt)("inlineCode",{parentName:"p"},"https://github.com/focus-creative-games/luban_unity"),"download). For other languages, please find the project that matches your project type in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/focus-creative-games/luban_examples/tree/main/Projects"},"Example Projects"),".\nCopy the Luban related runtime code from this project."),(0,o.kt)("p",null,"##unity + c# + json"),(0,o.kt)("p",null,"The corresponding example project is ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/focus-creative-games/luban_examples/tree/main/Projects/Csharp_Unity_json"},"Csharp_Unity_json"),",\nCopy the ",(0,o.kt)("inlineCode",{parentName:"p"},"Assets/LubanLib")," directory to your project and enable 'unsafe code' support in the 'Player Building'. Then load all the configuration with just one line of code."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'     void Load()\n     {\n         // One line of code can load all configurations. cfg.Tables contains an instance field for all tables.\n         var tables = new cfg. Tables(Loader);\n         // access a singleton table\n         Console.WriteLine(tables.TbGlobal.Name);\n         // access normal key-value table\n         Console.WriteLine(tables.TbItem.Get(12).Name);\n         // support operator [] usage\n         Console.WriteLine(tables.TbMail[1001].Desc);\n     }\n\n     private static JSONNode LoadJson(string file)\n     {\n         return JSON.Parse(File.ReadAllText($"{your_json_dir}/{file}.json", System.Text.Encoding.UTF8));\n     }\n\n')),(0,o.kt)("h2",{id:"use-c-code-in-unity-project-and-automatically-judge-to-load-bin-or-json-configuration"},"Use c# code in unity project and automatically judge to load bin or json configuration"),(0,o.kt)("p",null,"During the development period, I hope to use the json export format, but in order to save the export file size and improve loading performance, I hope to use the bin export format. By creating cfg.Tables through reflection, you can automatically adapt to these two methods without changing the code."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'     void Start()\n     {\n         var tablesCtor = typeof(cfg. Tables). GetConstructors()[0];\n         var loaderReturnType = tablesCtor.GetParameters()[0].ParameterType.GetGenericArguments()[1];\n         // Determine whether to use json or ByteBuf Loader according to the return value type of Loader in the constructor of cfg.Tables\n         System.Delegate loader = loaderReturnType == typeof(ByteBuf) ?\n             new System.Func<string, ByteBuf>(LoadByteBuf)\n             : (System.Delegate)new System.Func<string, JSONNode>(LoadJson);\n         var tables = (cfg.Tables)tablesCtor.Invoke(new object[] {loader});\n\n         // access a singleton table\n         Console.WriteLine(tables.TbGlobal.Name);\n         // access normal key-value table\n         Console.WriteLine(tables.TbItem.Get(12).Name);\n         // support operator [] usage\n         Console.WriteLine(tables.TbMail[1001].Desc);\n     }\n\n     private static JSONNode LoadJson(string file)\n     {\n         return JSON.Parse(File.ReadAllText($"{your_json_dir}/{file}.json", System.Text.Encoding.UTF8));\n     }\n\n     private static ByteBuf LoadByteBuf(string file)\n     {\n         return new ByteBuf(File. ReadAllBytes($"{your_json_dir}/{file}.bytes"));\n     }\n')),(0,o.kt)("h2",{id:"other-item-types"},"Other item types"),(0,o.kt)("p",null,"Please find an example project that matches your project type in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/focus-creative-games/luban_examples/tree/main/Projects"},"Projects"),", and just refer to it to load the code."))}d.isMDXComponent=!0}}]);