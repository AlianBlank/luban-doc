"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[687],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1733:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={},o="Get started quickly",l={unversionedId:"beginner/quickstart",id:"beginner/quickstart",title:"Get started quickly",description:"Install",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/beginner/quickstart.md",sourceDirName:"beginner",slug:"/beginner/quickstart",permalink:"/en/docs/beginner/quickstart",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u65b0\u624b\u6559\u7a0b",permalink:"/en/docs/beginner"},next:{title:"\u4f7f\u7528\u6307\u5357",permalink:"/en/docs/basic"}},s={},p=[{value:"Install",id:"install",level:2},{value:"Prepare to configure the project",id:"prepare-to-configure-the-project",level:2},{value:"Create Reward table",id:"create-reward-table",level:2},{value:"project preparation",id:"project-preparation",level:2},{value:"Prepare to generate scripts",id:"prepare-to-generate-scripts",level:2},{value:"load configuration",id:"load-configuration",level:2},{value:"use configuration",id:"use-configuration",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...i}=e;return(0,r.kt)(u,(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"get-started-quickly"},"Get started quickly"),(0,r.kt)("h2",{id:"install"},"Install"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install ",(0,r.kt)("a",{parentName:"li",href:"https://dotnet.microsoft.com/download/dotnet/7.0"},"dotnet sdk 7.0")," or higher version sdk"),(0,r.kt)("li",{parentName:"ol"},"Download the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/focus-creative-games/luban_examples"},"luban_examples project"),". The project contains test configurations and a number of example projects. For convenience, the files mentioned later refer to the files in this project by default.")),(0,r.kt)("h2",{id:"prepare-to-configure-the-project"},"Prepare to configure the project"),(0,r.kt)("p",null,"Directly use the MiniTemplate in the luban_examples project, and the subsequent operations will be modified on this basis. You can also copy the MiniTemplate to another directory and modify it, but you need to modify the relevant paths in the ",(0,r.kt)("inlineCode",{parentName:"p"},"MiniTemplate/gen.bat")," file."),(0,r.kt)("h2",{id:"create-reward-table"},"Create Reward table"),(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"reward.xlsx")," file in the ",(0,r.kt)("inlineCode",{parentName:"p"},"MiniTemplate/Datas")," directory with the following content:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"reward",src:n(1391).Z,width:"425",height:"201"})),(0,r.kt)("p",null,"Briefly introduce the file format:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Line 1 is the field name line. Cell A1 must start with ##. Indicates that this is a valid data table."),(0,r.kt)("li",{parentName:"ul"},"Line 2 is the field type line. The first cell must be ##type."),(0,r.kt)("li",{parentName:"ul"},"Line 3 is the grouping line. ",(0,r.kt)("inlineCode",{parentName:"li"},"c")," indicates that the field belongs to the client, ",(0,r.kt)("inlineCode",{parentName:"li"},"s")," indicates that it belongs to the server, ",(0,r.kt)("inlineCode",{parentName:"li"},"c,s")," indicates that it belongs to all at the same time, and leaving it blank also indicates that it belongs to all."),(0,r.kt)("li",{parentName:"ul"},"Line 4 is a comment line. To ... beginning. There can be 0-N comment lines, and they can appear anywhere."),(0,r.kt)("li",{parentName:"ul"},"From line 5 onwards are data lines.")),(0,r.kt)("p",null,"Luban does not limit the position and number of header lines. Lines like ",(0,r.kt)("inlineCode",{parentName:"p"},"##xxx")," can be ordered and positioned arbitrarily, while ",(0,r.kt)("inlineCode",{parentName:"p"},"##group")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"##")," lines are also optional."),(0,r.kt)("p",null,"It is recommended to use ",(0,r.kt)("inlineCode",{parentName:"p"},"xx_yy_zz")," style field names, because luban will automatically convert to The name of the naming style recommended by the language. You can also manually specify your desired command style."),(0,r.kt)("p",null,"Add the reward table declaration to ",(0,r.kt)("inlineCode",{parentName:"p"},"__tables__.xlsx")," in the Datas directory, as shown below\uff1a"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"reward",src:n(9343).Z,width:"918",height:"203"})),(0,r.kt)("p",null,"At this point, the creation of the reward table is completed!"),(0,r.kt)("h2",{id:"project-preparation"},"project preparation"),(0,r.kt)("p",null,"Take the most common unity + c# + json as an example.\nAn example reference project is ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/focus-creative-games/luban_examples/tree/main/Projects/Csharp_Unity_json"},"Csharp_Unity_Json"),",For other types, please refer to the corresponding projects in the Projects directory."),(0,r.kt)("p",null,"Copy the ",(0,r.kt)("inlineCode",{parentName:"p"},"Assets\\LubanLib")," directory in the Csharp_Unity_Json project to your Unity project, the location is not required. ",(0,r.kt)("strong",{parentName:"p"},"Then enable the unsafe option in Unity's PlayerSettings")," (if your project requires not to enable unsafe, please go to the group for help).\nAt this time, try to compile the project. If there is no compilation error, it means that the Luban related library code has been successfully introduced."),(0,r.kt)("h2",{id:"prepare-to-generate-scripts"},"Prepare to generate scripts"),(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"gen.bat")," file and put it under the project (the location is not required)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bat"},"\nset LUBAN_DLL=<Luban.dll path>\nset CONF_ROOT=<DesignerConfigs path>\n\ndotnet %LUBAN_DLL% ^\n    -t client ^\n    -c cs-simple-json ^\n    -d json  ^\n    --schemaPath %CONF_ROOT%\\Defines\\__root__.xml ^\n    -x inputDataDir=%CONF_ROOT%\\Datas ^\n    -x outputCodeDir=<cs code output directory> ^\n    -x outputDataDir=<json data output directory>\n\npause\n")),(0,r.kt)("p",null,"Briefly introduce the parameters in the bat file\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"LUBAN_DLL Path to the Luban.dll file. Point to ",(0,r.kt)("inlineCode",{parentName:"li"},"luban_examples/Tools/Luban/Luban.dll")),(0,r.kt)("li",{parentName:"ul"},"CONF_ROOT The path to the configuration project. Point to ",(0,r.kt)("inlineCode",{parentName:"li"},"luban_examples/DesignerConfigs")),(0,r.kt)("li",{parentName:"ul"},"'-t' generate target. It can be a value such as client, server, and all"),(0,r.kt)("li",{parentName:"ul"},"'-c' Type of generated code. ",(0,r.kt)("inlineCode",{parentName:"li"},"cs-simple-json")," is to generate c# code that uses SimpleJSON to load json data"),(0,r.kt)("li",{parentName:"ul"},"the data type generated by '-d'"),(0,r.kt)("li",{parentName:"ul"},"'inputDataDir' configuration table (eg xlsx) root directory"),(0,r.kt)("li",{parentName:"ul"},"'outputCodeDir' output directory of c# code"),(0,r.kt)("li",{parentName:"ul"},"'outputDataDir' output directory of json data")),(0,r.kt)("p",null,"Adjust the configuration paths in the bat file to appropriate values. If in doubt, you can refer to the ",(0,r.kt)("inlineCode",{parentName:"p"},"gen.bat")," file of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Csharp_Unity_Json")," project. Run the script, if everything is normal, a series of logs will be generated, and the last line is ",(0,r.kt)("inlineCode",{parentName:"p"},"bye~"),"."),(0,r.kt)("h2",{id:"load-configuration"},"load configuration"),(0,r.kt)("p",null,"All configuration tables can be loaded with just one line of code. Only loaded once for the entire game run (unless you want to reload configuration on the fly). In practice, tables are created and saved for later use."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'\nstring gameConfDir = "<outputDataDir>"; // Replace with the directory pointed to by outputDataDir in gen.bat\nvar tables = new cfg.Tables(file => JSON.Parse(File.ReadAllText($"{gameConfDir}/{file}.json")));\n\n')),(0,r.kt)("h2",{id:"use-configuration"},"use configuration"),(0,r.kt)("p",null,"cfg.Tables contains an instance field for all configuration tables. After loading cfg.Tables, use ",(0,r.kt)("inlineCode",{parentName:"p"},"tables.<table name>")," to get the table instance, and then perform subsequent operations on the table.\nFor example, we want to print the reward information of Reward table id = 1001, the code is as follows\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'cfg.demo.Reward reward = tables.TbReward.Get(1001);\nConsole.WriteLine("reward:{0}", reward);\n')),(0,r.kt)("p",null,"You may notice that the first letters of the field names id, name, and desc in the reward table are capitalized. This is because the tool will automatically convert the field name of the corresponding code style according to the output language, that is, boo_bar will be converted to a name like BooBar.\nTherefore, it is recommended to uniformly use the style of xx_yy_zz for field names in the configuration."),(0,r.kt)("p",null,"This completes the configuration usage example!"))}d.isMDXComponent=!0},1391:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/quickstart_reward-19dc3f1fbc3b8d0ae5863ea2a9451422.jpg"},9343:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/quickstart_table-b88ebd57fde1248746a8b2eea85e0838.jpg"}}]);